{"version":3,"sources":["components/HomePage.js","components/cbt-recorder/contexts/ThoughtRecordContext.js","components/auxiliary/SummaryCard.js","components/cbt-recorder/ThoughtHome.js","components/auxiliary/SingleInputForm.js","components/auxiliary/DirectionButton.js","components/auxiliary/BackForwardNavigation.js","components/cbt-recorder/recordCreation/Situation.js","components/cbt-recorder/recordCreation/Emotions.js","components/cbt-recorder/assets/images/sad-emoji.png","components/cbt-recorder/assets/images/afraid-emoji.png","components/cbt-recorder/assets/images/angry-emoji.png","components/cbt-recorder/assets/images/disgust-emoji.png","components/cbt-recorder/assets/images/happy-emoji.png","components/cbt-recorder/assets/images/surprise-emoji.png","components/auxiliary/Table.js","components/cbt-recorder/recordCreation/AutomaticThoughts.js","components/auxiliary/ActiveTableCell.js","components/cbt-recorder/recordCreation/Evidence.js","components/cbt-recorder/RecordPreview.js","components/cbt-recorder/recordCreation/AlternateThoughts.js","components/CBTThoughtRecord.js","components/auxiliary/Menu.js","components/Navbar.js","components/App.js","reportWebVitals.js","index.js"],"names":["HomePage","id","ThoughtRecordContext","createContext","testEvidence","testAlt","thought","ThoughtRecordContextProvider","props","useState","situation","setSituation","emotion","setEmotion","automaticThoughts","setAutomaticThoughts","evidence","setEvidence","alternateThought","setAlternateThought","Provider","value","children","SummaryCard","capitalize","aString","toUpperCase","concat","slice","className","title","content","date","data","automaticThought","ThoughtHome","to","map","record","SingleInputForm","textInput","setTextInput","rate","setRate","onSubmit","event","preventDefault","count","callback","submitInput","label","htmlFor","tabIndex","name","required","placeholder","onChange","target","length","type","min","max","step","DirectionButton","child","onClick","url","BackForwardNavigation","leftButton","rightButton","Situation","input","setInput","useContext","directionProps","choices","src","alt","Emotions","object","Table","body","rows","row","columns","i","b","action","symbol","header","scope","AutomaticThoughts","thoughts","setThoughts","tableProps","sort","a","Intensity","removeThought","state","filter","item","split","uuidv4","ActiveTableCell","EVIDENCE_FOR","EVIDENCE_AGAINST","Evidence","evidenceFor","setEvidenceFor","evidenceAgainst","setEvidenceAgainst","removeEvidence","option","processEvidence","forLength","againstLength","result","push","Math","updateEvidence","StyledModal","Modal","styled","PreviewBlock","RecordPreview","isOpen","onBackgroundClick","onEscapeKeydown","COLUMNS","AlternateThoughts","thoughtList","setThoughtList","isModalOpen","setIsModalOpen","evidenceLength","alternateLength","index0","processAlternatives","style","zIndex","CBTThoughtRecord","match","exact","path","component","horizontalActive","color","backgroundColor","borderRadius","paddingTop","verticalActive","Menu","layout","menu","ul","activeStyle","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ModalBackground","div","ReactDOM","render","StrictMode","backgroundComponent","document","getElementById"],"mappings":"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","file":"static/js/main.22f92e94.chunk.js","sourcesContent":["import React from 'react'\n\nconst HomePage = () => {\n  return (\n    <section id={'app-homepage'} >\n      <div >\n        <h1 >{'Coming Soon'}</h1>\n      </div>\n    </section >\n  )\n}\n\nexport default HomePage\n","import React, { createContext, useState } from 'react'\n\nexport const ThoughtRecordContext = createContext()\n\nconst testEvidence = [['rest','well'],['djd','dsjhd'],['hdh','hdsj']]\nconst testAuto = 'feeling sad'\nconst testAlt = [{id: 1, thought: 'I am happy now'},{id:2,thought: 'Love is in the air'}]\n\nconst ThoughtRecordContextProvider = (props) => {\n  const [situation, setSituation] = useState('')\n  const [emotion, setEmotion] = useState('Feeling Sad')\n  const [automaticThoughts, setAutomaticThoughts] = useState(testAuto)\n  const [evidence, setEvidence] = useState(testEvidence)\n  const [alternateThought, setAlternateThought] = useState(testAlt)\n\n\n  return (\n    <ThoughtRecordContext.Provider value={{\n                                          situation, setSituation,\n                                          emotion,setEmotion,\n                                          automaticThoughts,setAutomaticThoughts,\n                                          evidence,setEvidence,\n                                          alternateThought,setAlternateThought\n    }} >\n      {props.children}\n    </ThoughtRecordContext.Provider >\n  )\n}\n\nexport default ThoughtRecordContextProvider\n","import React from 'react'\n\nconst SummaryCard = (props) => {\n  const capitalize = aString => aString[0].toUpperCase().concat(aString.slice(1))\n  return (\n    <div className={'summary-card'}>\n      <h3 className={'title'} >{capitalize(props.title)}</h3>\n      <div >\n        <p >{capitalize(props.content)}</p>\n      </div>\n      <div className={'date'} >{props.date}</div>\n    </div>\n  )\n}\n\nexport default SummaryCard\n","import React from 'react'\nimport { FileEarmarkPlusFill } from 'react-bootstrap-icons'\nimport { Link } from 'react-router-dom'\nimport SummaryCard from '../auxiliary/SummaryCard'\n\nconst data = [\n  {\n    id: 236,\n    situation: 'wgwduidwiy',\n    emotion: 'feeling Sad',\n    automaticThought: 'hyiw7823h  ciue iiiubiw we',\n    alternateThought: [\n      'hjsdjhdsh','hjdsjhdshj duui  idu', 'hvdsvbds dsids di udsi ','hdsj ds  dsuu'\n    ],\n    date: 'Aug 4, 2021'\n  },\n  {\n    id: 223,\n    situation: 'wgwduidwiy',\n    emotion: 'feeling Sad',\n    automaticThought: 'hyiw7823h  ciue iiiubiw we',\n    alternateThought: [\n      'hjsdjhdsh','hjdsjhdshj duui  idu', 'hvdsvbds dsids di udsi ','hdsj ds  dsuu'\n    ],\n    date: 'Aug 23, 2021'\n  },\n  {\n    id: 283,\n    situation: 'wgwduidwiy',\n    emotion: 'feeling Sad',\n    automaticThought: 'hyiw7823h  ciue iiiubiw we',\n    alternateThought: [\n      'hjsdjhdsh',\n      'hjdsjhdshj duui  idu', \n      'hvdsvbds dsids di udsi ',\n      'hdsj ds  dsuu'\n    ],\n    date: 'Aug 13, 2021'\n  }\n]\n\n\n\nconst ThoughtHome = () => {\n  return (\n    <section  id={'thought-home'}>\n      <div className={'title'}>\n        <h1 >{'CBT Thought Record'}</h1>\n        <div id={'create-thought'}>\n          <Link to={'/thought-record/create/situation'} >\n            <FileEarmarkPlusFill className={'create-icon'}/>\n          </Link>\n        </div>\n      </div>\n      <div className={'thought-list'}>\n        {\n          data.map(record =>{\n            return(\n              <SummaryCard key={record.id} {...{\n                                                title: record.emotion,\n                                                content: record.situation,\n                                                date: record.date\n                                               }} />\n            )\n          })\n        }        \n      </div>      \n    </section >\n  )\n}\n\nexport default ThoughtHome\n","import React, { useState } from 'react'\n\n/**\n * \n * @param {object} props - Component properties \n * @param {string} props.label - Input label\n * @param {boolean} props.count - If true rate is required \n * @param {Function} props.callback - Function to pass input to parent  component\n */\nconst SingleInputForm = (props) => {\n  const [textInput, setTextInput] = useState('')\n  const [rate, setRate] = useState('50')\n\n  /**\n   * \n   * @param {object} event - Form event property\n   */\n  const submitInput = (event) =>{\n    event.preventDefault()\n    props.count ? props.callback([textInput,rate]) :  props.callback(textInput)\n    setTextInput('')    \n  }\n    \n  return (\n    <form onSubmit={event=>submitInput(event)} >\n      {(props.label) && <label htmlFor={'input'}  >{props.label}</label>}\n      <textarea id={'input'}  tabIndex={'0'} name={'input'} value={textInput}\n                required placeholder={'Max 100...'} \n                onChange={(event)=>{(event.target.value.length <= 100) && \n                                      setTextInput(event.target.value) \n                                    }}  />\n      {\n        props.count && (<input type={'number'} min={'0'} max={'100'} tabIndex={'0'} value={rate} step={'5'}\n                             onChange={event => setRate(event.target.value)} />) \n      }                              \n      <input type={'submit'} tabIndex={'0'} value={'Add'}/>\n    </form >\n  )\n}\n\nexport default SingleInputForm","import React from 'react'\nimport { ChevronLeft, ChevronRight } from 'react-bootstrap-icons'\nimport { Link } from 'react-router-dom'\n\n/**\n * \n * @param {object} props\n * @param {string} props.title - Accessible name \n * @param {string} props.content - Button label \n * @callback props.callback - Button onClick callback\n * @returns \n */\nconst DirectionButton = (props) => {\n\n  const child = (\n    <button type={'button'} tabIndex={'0'} title={props.title}\n            onClick={(props.callback === null)? ()=>{} : props.callback}  >\n      {\n        (props.content === 'Back')?<ChevronLeft /> :''\n      }\n      {props.content}\n      {\n        (props.content !== 'Back')? <ChevronRight /> :''\n      }\n    </button>\n  )\n\n  return (\n    <div > \n      {(props.url)? <Link to={props.url} >{child}</Link>: child }\n    </div>\n  )\n}\n\nexport default DirectionButton\n","import React from 'react'\nimport DirectionButton from './DirectionButton'\n\nconst BackForwardNavigation = props => {\n  return (\n    <div >\n      {\n        (props.leftButton.title !== null)? <DirectionButton {...props.leftButton} content={'Back'} /> : ''\n      }\n      {\n        (props.rightButton.title !== null)?  <DirectionButton {...props.rightButton} content={'Next'} /> : ''\n      }\n    </div>\n  )\n}\n\nexport default BackForwardNavigation\n","import React, { useContext, useState } from 'react'\nimport { ThoughtRecordContext } from '../contexts/ThoughtRecordContext'\nimport SingleInputForm from '../../auxiliary/SingleInputForm'\nimport BackForwardNavigation from '../../auxiliary/BackForwardNavigation'\n\nconst Situation = () => {\n  const [input, setInput] = useState('')\n  const {setSituation} = useContext(ThoughtRecordContext)\n \n  const submitSituation = () =>{\n    if(input.length > 1){\n      setSituation(input)\n      setInput('')\n    }\n  }\n\n  const directionProps ={\n    leftButton: { callback: null, title: null, content: null },\n    rightButton: { \n                  callback: ()=>submitSituation(), \n                  title: 'Go Emotion Page',\n                  url: '/thought-record/create/emotion' \n                }\n  }\n\n  return (\n    <section >\n      <div >\n        <p >{'Enter a short sentence describing and actual event or thought that is causing\\\n               you emotional distress'}\n        </p>\n      </div>\n      <div >\n        <SingleInputForm {...{label: 'Situation', callback: setInput, count: false}} />\n      </div>\n      <BackForwardNavigation {...directionProps} />      \n    </section >\n  )\n}\n\nexport default Situation\n","import React, { useContext } from 'react'\n\nimport { ThoughtRecordContext } from '../contexts/ThoughtRecordContext'\n\nimport sad from '../assets/images/sad-emoji.png'\nimport afraid from '../assets/images/afraid-emoji.png'\nimport angry from '../assets/images/angry-emoji.png'\nimport disgust from '../assets/images/disgust-emoji.png'\nimport happy from '../assets/images/happy-emoji.png'\nimport surprise from '../assets/images/surprise-emoji.png'\nimport BackForwardNavigation from '../../auxiliary/BackForwardNavigation'\n\nconst choices = [\n  {src: sad, alt: 'round yellow face emoji with dark blue eyes and a frown', title:'Feeling Sad' },\n  {\n    src: afraid , \n    alt: 'round face emoji with blue top half, yellow bottom half furrowed brow with dark blue eyes and scared mouth expression', \n    title: 'Feeling Afraid' \n  },\n  {\n    src: angry , \n    alt: 'round yellow face emoji with tightly knitted brows, dark blue eyes, open mouth and grinding teeth', \n    title: 'Feeling Angry' \n  },\n  {\n    src: disgust, \n    alt: 'round face emoji with green top half, yellow-orange bottom half, tightly knitted brows, with dark blue eyes small mouth and puffy cheeks', \n    title: 'Feeling Disgusted' \n  },\n  {\n    src: happy, \n    alt: 'round yellow face emoji with dark blue eyes and a wide smile with white  top layer teeth', \n    title: 'Feeling Happy' \n  },\n  {\n    src: surprise, \n    alt: 'round yellow face emoji with mouth open in a circle, wide open white  eyes and dark blue eyes iris', \n    title: 'Feeling Surprised' \n  },\n]\n\nconst Emotions = () => {\n  const {setEmotion} = useContext(ThoughtRecordContext)\n\n  const directionProps ={\n    leftButton: { callback: null, title: 'Go Back to Situation',url:'/thought-record/create/situation'},\n    rightButton: { callback: null, title: 'Go Automatic Thought',url: '/thought-record/create/automatic-thought'}\n  }  \n\n  return (\n    <section >\n      <div >\n        <p >{'Select the emotion which best represent your strongest emotion.'}</p>\n      </div>\n      {/* emoji choices */}\n      <div >\n        {\n          choices.map(object =>{\n            return (\n              <span key={object.title} tabIndex={'0'} title={object.title} \n                    onClick={()=>setEmotion(object.title)} >\n                <img src={object.src} alt={object.alt}  />\n              </span>\n            )\n          })\n        }\n      </div>\n      <BackForwardNavigation {...directionProps} />      \n    </section >\n  )\n}\n\nexport default Emotions","export default __webpack_public_path__ + \"static/media/sad-emoji.9705fe53.png\";","export default __webpack_public_path__ + \"static/media/afraid-emoji.13caa18b.png\";","export default __webpack_public_path__ + \"static/media/angry-emoji.590e16a6.png\";","export default __webpack_public_path__ + \"static/media/disgust-emoji.920f8667.png\";","export default __webpack_public_path__ + \"static/media/happy-emoji.8d0bd99c.png\";","export default __webpack_public_path__ + \"static/media/surprise-emoji.575c8410.png\";","import React from 'react'\n\n/**\n * \n * @param {object} props - Component properties\n * @param {array} props.columns - Table header string labels\n * @param {array} props.rows - Table row values in an object form \n * @param {number} props.rows[].id - Id of the table row\n * @param {Object} props.rows[].action - Optional: use to add a symbol and event\n * @param {Function} props.rows[].action.callback - onClick event callback function\n * @param {element} props.rows[].action.symbol - Image element for event action\n  */\nconst Table = (props) => {\n\n  const body = (!props.rows)? ' ':  props.rows.map((row )=>{\n\n    return (\n      <tr key={row.id} >\n      {props.columns.map(function(i, b){ \n        return (i === 'action')? (<td key={ row.id + b }>\n                                    <span tabIndex={'0'} onClick={()=>row.action.callback(row.id)} >\n                                      {row.action.symbol}\n                                    </span>\n                                  </td>) :\n        (<td key={`${row.id + b}`} >{row[i]}</td>)} )}\n      </tr >\n    )\n  });\n\n  return (\n    <div>\n      <table >\n        <thead className={'table-primary'}>\n          <tr >\n            {\n              (!props.columns)? '':  props.columns.map(header=> <th key={header} scope={'col'} >{(header === 'action')? ' ': header}</th> )\n            }\n          </tr>\n        </thead>\n        <tbody >\n          {\n            body\n          }\n        </tbody>\n      </table>\n      \n    </div>\n  )\n}\n\nexport default Table\n","import React, { useContext, useState} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport { XSquare } from 'react-bootstrap-icons'\n\nimport SingleInputForm from '../../auxiliary/SingleInputForm'\nimport { ThoughtRecordContext } from '../contexts/ThoughtRecordContext'\nimport Table from '../../auxiliary/Table'\nimport BackForwardNavigation from '../../auxiliary/BackForwardNavigation'\n\nconst AutomaticThoughts = () => {\n  const {emotion, setAutomaticThoughts} = useContext(ThoughtRecordContext)\n  const [thoughts, setThoughts] = useState([])\n\n  let tableProps = {columns: ['Thought', 'Intensity', 'action'], rows: [...thoughts]}\n\n  /**\n   * \n   * @param {array} value - Value return from SingleInputForm\n   * @param {string} value[0] - A thought\n   * @param {number} value[1] - Intensity of the thought \n   */\n  const updatethoughts = value =>{    \n    setThoughts([...thoughts,{\n                              id: uuidv4(), \n                              'Thought': value[0], \n                              'Intensity': value[1], \n                              'action': {callback: removeThought, symbol: <XSquare /> }\n                            }])\n  }\n\n  const processThoughts = () =>{\n    if(thoughts.length === 1){\n      setAutomaticThoughts(thoughts[0]['Thought'])\n    }\n    else if(thoughts.length >= 2){\n      setAutomaticThoughts(thoughts.sort((a,b)=>b.Intensity - a.Intensity)[0]['Thought'])\n    }    \n  }\n\n  const directionProps = {\n    leftButton: { callback: null, title: 'Go Back to Emotion',url: '/thought-record/create/emotion'},\n    rightButton: { callback: ()=>processThoughts(), title: 'Go To Evidence',url: '/thought-record/create/evidence'  }\n  }\n\n  /**\n   * \n   * @param {number} id - Id of thought to be remove\n   */\n  const removeThought = id =>{\n   setThoughts(state=> state.filter(item=> item.id !== id))\n  }  \n\n  return (\n    <section >\n      <div >\n        <p >{`Enter a short sentence describing the thought you have from feeling ${emotion.split(' ')[1]}.`}</p>\n      </div>\n      <div >\n        <Table {...tableProps} />\n      </div >\n      <div >\n        <SingleInputForm {...{label: 'Thoughts',callback: updatethoughts, count: true}} />\n      </div>\n      <BackForwardNavigation {...directionProps} />\n    </section >\n  )\n}\n\nexport default AutomaticThoughts\n","import React from 'react'\n\n/**\n * An interactive table cell \n * @param {object} props \n * @param {function} callback - To be executed with the onclick event\n * @param {string} thought - Element display content \n * @returns A span element\n */\nconst ActiveTableCell = (props) => {\n  return (\n    <span tabIndex={'0'} onClick={props.callback} >\n      {props.thought}\n    </span>)\n}\n\nexport default ActiveTableCell\n","import React, { useContext, useState } from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nimport { ThoughtRecordContext } from '../contexts/ThoughtRecordContext'\nimport Table from '../../auxiliary/Table'\nimport SingleInputForm from '../../auxiliary/SingleInputForm'\nimport ActiveTableCell from '../../auxiliary/ActiveTableCell'\nimport BackForwardNavigation from '../../auxiliary/BackForwardNavigation'\n\nconst EVIDENCE_FOR = 'This is true because:'\nconst EVIDENCE_AGAINST = 'This is untrue because:'\n\nconst Evidence = () => {\n  const {automaticThought, setEvidence} = useContext(ThoughtRecordContext)\n  const [evidenceFor, setEvidenceFor] = useState([])\n  const [evidenceAgainst, setEvidenceAgainst] = useState([])  \n\n  /**\n   * \n   * @param {string} value - Evidence obtained from SingleInputForm\n   */\n  const addEvidenceFor = value =>{\n    setEvidenceFor(state => [...state, {id: uuidv4(), thought: value}])\n  }\n\n  /**\n   * \n   * @param {string} value - Evidence obtained from SingleInputForm\n   */\n  const addEvidenceAgainst = value =>{\n    setEvidenceAgainst(state => [...state, {id: uuidv4(), thought: value}])\n  }\n\n  /**\n   * \n   * @param {string} option - Of value \"for\" or \"against\"\n   * @param {number} id - Id of evidence to be removed\n   */\n  const removeEvidence = (option, id) =>{\n    (option === 'for')? setEvidenceFor((state=> state.filter(item=> item.id !== id))):\n                        setEvidenceAgainst((state=> state.filter(item=> item.id !== id)))\n  }\n\n  /**\n   * \n   * @param {string} option - Of value \"table\" or \"context\" \n   * @returns {array} - If option is table return value is an array of strings, otherwise an array of objects\n   */\n  const processEvidence = (option) =>{\n    const forLength = evidenceFor.length\n    const againstLength = evidenceAgainst.length\n    let result = []\n\n    if(forLength === 0 && againstLength === 0 && option === 'table'){\n      return [{id: 1,[EVIDENCE_FOR]:' ',[EVIDENCE_AGAINST]:' ' }]\n    }\n    else if(forLength === 0 && againstLength === 0 && option === 'context'){\n      return result \n    }\n    else {\n      for(let i = 0; i < Math.max(forLength,againstLength); i++){\n        result.push((option === 'table')? {\n                      id: uuidv4(),\n                      [EVIDENCE_FOR]: (evidenceFor[i])? (<ActiveTableCell {...{\n                                                                            thought: evidenceFor[i].thought, \n                                                                            callback: ()=>removeEvidence('for',evidenceFor[i].id)\n                                                                          }}  /> ) : ' ',\n                      [EVIDENCE_AGAINST]: (evidenceAgainst[i])? (<ActiveTableCell {...{\n                                                                                thought: evidenceAgainst[i].thought, \n                                                                                callback: ()=>removeEvidence('against',evidenceAgainst[i].id)\n                                                                              }}  /> ) : ' '\n        } : [\n              (evidenceFor[i])? evidenceFor[i].thought : ' ',\n              (evidenceAgainst[i])? evidenceAgainst[i].thought: ' '\n        ])\n      }\n    }\n    return result\n  }\n\n  const updateEvidence = () =>{\n    const result = processEvidence('context')\n    result && setEvidence(result)\n  }  \n\n  let tableProps = {columns: [EVIDENCE_FOR, EVIDENCE_AGAINST], rows: processEvidence('table')}\n  \n  const directionProps ={\n    leftButton: { \n                  callback: null, \n                  title: 'Go Back to Automatic Thought',\n                  url: '/thought-record/create/automatic-thought' \n                },\n    rightButton: { \n                  callback: ()=>updateEvidence(), \n                  title: 'Go To Alternate Thought',\n                  url: '/thought-record/create/alternate-thoughts' \n                }\n  }\n\n  return (\n    <section >\n      <div >\n        <p >{automaticThought}</p>\n      </div>\n      <Table {...tableProps} /> \n      <SingleInputForm {...{label: 'Statement that proves the title',callback: addEvidenceFor,count: false }}/>\n      <SingleInputForm {...{label: 'Statement that disproves the title',callback: addEvidenceAgainst,count:false }} />\n      <BackForwardNavigation {...directionProps} />\n    </section >\n  )\n}\n\nexport default Evidence\n","import React, { useContext } from 'react'\nimport Modal from 'styled-react-modal'\n//import styled from 'styled-components'\nimport { ThoughtRecordContext } from './contexts/ThoughtRecordContext'\nimport BackForwardNavigation from '../auxiliary/BackForwardNavigation'\n\nconst StyledModal = Modal.styled`\n  min-width: 90%;\n  max-width: 900px;\n  height: 85vh;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  background-color: white;\n  transition: all 0.3s ease-in-out;\n  border-radius: 10px;\n  box-shadow: 3px 3px 10px rgba(0,0,0,0.5);\n  z-index: 1100;\n`\n\nconst PreviewBlock = props =>{\n  return(\n    <div >\n      <div >{props.title}</div>\n      <div >{props.content}</div>\n    </div >\n  )\n}\n\n/**\n * \n * @param {Object} props\n * @param {Boolean} props.isOpen - Show model if true\n * @param {Function}  props.callback - The callback the handles Modal closing\n * @returns \n */\nconst RecordPreview = (props) => {\n  const {\n          situation,\n          emotion,\n          automaticThought,\n          alternateThought\n        } = useContext(ThoughtRecordContext)\n\n\n  const processThoughts = () =>{}\n\n  const directionProps = {\n    leftButton: { callback: ()=> props.callback(), title: 'Close Modal' },\n    rightButton: { callback: ()=>processThoughts(), title: 'Submit Record' }\n  }\n\n  return (\n    <StyledModal isOpen={props.isOpen} onBackgroundClick={props.callback} onEscapeKeydown={props.callback} >\n      <PreviewBlock {...{title: 'Situation', content: situation}} />\n      <PreviewBlock {...{title: 'Emotion', content: emotion}} />\n      <PreviewBlock {...{title: 'Automatic Thought', content: automaticThought}} /> \n      <div >\n        <div >{'Alternate Thought'}</div>\n        <ul >\n          {\n            alternateThought.map(item=>{\n              return <li key={item.id} >{item.thought}</li>\n            })\n          }\n        </ul>\n      </div>\n      <BackForwardNavigation {...directionProps} />\n    </StyledModal >\n  )\n}\n\nexport default RecordPreview\n","import React, { useContext, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { ThoughtRecordContext } from '../contexts/ThoughtRecordContext'\nimport Table from '../../auxiliary/Table'\nimport SingleInputForm from '../../auxiliary/SingleInputForm'\nimport ActiveTableCell from '../../auxiliary/ActiveTableCell'\nimport BackForwardNavigation from '../../auxiliary/BackForwardNavigation'\nimport RecordPreview from '../RecordPreview'\n\nconst COLUMNS =['Evidence For','Evidence Against','Alternate Thought']\n\n// devops\nconst testAlt = [{id: 1, thought: 'I am happy now'},{id:2,thought: 'Love is in the air'}]\n\nconst AlternateThoughts = () => {\n  const {evidence, automaticThoughts, setAlternateThought} = useContext(ThoughtRecordContext)\n  const [thoughtList, setThoughtList] = useState(testAlt)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const updateThoughtList = value => {\n    setThoughtList(state => [...state,{id: uuidv4(), thought: value }])\n  }\n\n  const removeAlternate = id =>{\n    setThoughtList(state=> state.filter(item => item.id !== id))\n  }\n  \n  const openModal = () =>{\n    setAlternateThought(thoughtList)\n    setIsModalOpen(state =>!state)\n  }\n\n  const processAlternatives = () =>{\n    let evidenceLength = evidence.length\n    let alternateLength = thoughtList.length\n    let result = []\n    for (let i = 0; i < Math.max(evidenceLength,alternateLength); i++) {\n      let index0 = evidence[i]? evidence[i] : [' ',' ']\n      result.push({\n                    id: uuidv4(),\n                    [COLUMNS[0]]: index0[0],\n                    [COLUMNS[1]]: index0[1],\n                    [COLUMNS[2]]: thoughtList[i]? <ActiveTableCell {...{\n                                                                        callback: ()=>removeAlternate(thoughtList[i].id), \n                                                                        thought: thoughtList[i].thought\n                                                                      }} /> : ' '\n      })      \n    }\n    return result\n  }\n\n  const tableProps = {\n                      columns: COLUMNS,\n                      rows: processAlternatives()                   \n                    } \n\n  const directionProps = {\n    leftButton: { callback: null, title: 'Go Back to Evidence',url: '/thought-record/create/evidence' },\n    rightButton: { callback: ()=> (thoughtList.length >= 1)? openModal(): {}, title: 'Preview Record', }\n  }\n\n  return (\n    <section style={{zIndex:2}} >\n      <div >\n        <p >{automaticThoughts}</p>\n      </div>\n      <Table {...tableProps} /> \n      <SingleInputForm {...{label:'Alternate Thought',callback: updateThoughtList, count: false}} />\n      <BackForwardNavigation {...directionProps} />\n      <RecordPreview {...{isOpen: isModalOpen, callback: ()=>setIsModalOpen(!isModalOpen)}} />\n    </section >\n  )\n}\n\nexport default AlternateThoughts\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport ThoughtRecordContextProvider from './cbt-recorder/contexts/ThoughtRecordContext'\nimport ThoughtHome from './cbt-recorder/ThoughtHome'\nimport Situation from './cbt-recorder/recordCreation/Situation'\nimport Emotions from './cbt-recorder/recordCreation/Emotions'\nimport AutomaticThoughts from './cbt-recorder/recordCreation/AutomaticThoughts'\nimport Evidence from './cbt-recorder/recordCreation/Evidence'\nimport AlternateThoughts from './cbt-recorder/recordCreation/AlternateThoughts'\n\n\n\nconst CBTThoughtRecord = ({match}) => {\n  return (\n    <ThoughtRecordContextProvider >\n      <Switch >\n        <Route exact path={match.url} component={ThoughtHome} />\n        <Route path={match.url + '/create/situation' } component={Situation} />\n        <Route path={match.url + '/create/emotion' } component={Emotions} />\n        <Route path={match.url + '/create/automatic-thought' } component={AutomaticThoughts} />\n        <Route path={match.url + '/create/evidence' } component={Evidence} />\n        <Route path={match.url + '/create/alternate-thoughts' } component={AlternateThoughts} />\n      </Switch>\n    </ThoughtRecordContextProvider>\n  )\n}\n\nexport default CBTThoughtRecord\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst horizontalActive={\n  color: '#2196f3',\n  backgroundColor: 'white',\n  borderRadius: '5px',\n  paddingTop: '5px'\n  }\n\nconst verticalActive = {\n  backgroundColor: 'white'\n}\n\nconst Menu = (props) => {\n  const layout = (props.menu === 'dropdown')? {ul: 'vertical-menu',style: verticalActive} : \n                                              {ul: 'horizontal-menu',style: horizontalActive} \n  return (\n    <ul className={ layout.ul} >\n      <NavLink to={'/'} exact activeStyle={layout.style} >\n        <li >{'Home'}</li>\n      </NavLink>\n      <NavLink to={'/thought-record'} exact activeStyle={layout.style} >\n        <li >{'Thoughts'}</li>\n      </NavLink>\n    </ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { List, Safe } from 'react-bootstrap-icons'\nimport { Link } from 'react-router-dom'\nimport Menu from './auxiliary/Menu'\n\nconst Navbar = () => {\n  return (\n    <header >\n      <nav >\n        {/* Company name and logo */}\n        <Link to={'/'} >\n          <div className={'company'} title={'Go To Home page'}>            \n            <Safe className={'logo'} aria-label={'colored security safe'} />\n            <span >{'Life Logs'}</span>            \n          </div>\n        </Link>\n        {/* Navigation */}\n        <div className={'menu'} >\n          <span className={'menu-burger'} tabIndex={'0'}  >\n            <List className={'menu-icon'} aria-label={'white hamburger dropdown menu'} />\n          </span >\n          <Menu menu={'dropdown'} />\n          <Menu menu={'inline'} />\n        </div >        \n      </nav>\n    </header>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport HomePage from './HomePage';\nimport CBTThoughtRecord from './CBTThoughtRecord';\nimport Navbar from './Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <main className=\"App\">\n      <Router >\n        <Navbar />\n        <Switch >          \n          <Route path={'/'} exact component={HomePage} />\n          <Route path={'/thought-record'}  component={CBTThoughtRecord} />\n        </Switch>\n      </Router >\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\n\nimport './components/scss/index.scss'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport {ModalProvider} from 'styled-react-modal'\n\n/** Background element for the modal */\nconst ModalBackground = styled.div` \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1000;\n  opacity: 1.0;\n  background-color: #2196f3;\n`\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider backgroundComponent={ModalBackground} >\n      <App />\n    </ModalProvider >\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}