{"version":3,"sources":["components/Main.js","components/cbt-recorder/RecordPreview.js","assets/images/sad-emoji.png","assets/images/afraid-emoji.png","assets/images/angry-emoji.png","assets/images/disgust-emoji.png","assets/images/happy-emoji.png","assets/images/surprise-emoji.png","components/Menu.js","components/Navbar.js","components/App.js","reportWebVitals.js","index.js"],"names":["Main","Modal","styled","Menu","props","layout","menu","ul","className","Navbar","tabIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ModalBackground","div","ReactDOM","render","StrictMode","backgroundComponent","document","getElementById"],"mappings":"gQAYeA,G,OCNKC,EAAMC,OAAT,2W,MCNF,ICAA,ICAA,ICAA,ICAA,ICAA,IPIF,WACX,OACE,2B,gBQMWC,EAVF,SAACC,GACZ,IAAMC,EAAyB,aAAfD,EAAME,KAAsB,CAACC,GAAI,iBAAmB,CAACA,GAAI,mBACzE,OACE,qBAAIC,UAAYH,EAAOE,GAAvB,UACE,6BAAM,SACN,6BAAM,iBCmBGE,EAtBA,WACb,OACE,iCACE,gCAEE,sBAAKD,UAAW,UAAhB,UACE,cAAC,IAAD,CAAMA,UAAW,OAAQ,aAAY,0BACrC,+BAAQ,iBAGV,sBAAKA,UAAW,OAAhB,UACE,sBAAMA,UAAW,cAAeE,SAAU,IAA1C,SACE,cAAC,IAAD,CAAMF,UAAW,YAAa,aAAY,oCAE5C,cAAC,EAAD,CAAMF,KAAM,aACZ,cAAC,EAAD,CAAMA,KAAM,oBCLPK,EAVH,WACV,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGRQ,EAAkBnB,UAAOoB,IAAV,6QAcrBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,gBAAD,CAAeC,oBAAqBL,EAApC,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.a2951a5d.chunk.js","sourcesContent":["import React from 'react'\nimport CBTHomePage from './cbt-recorder/CBTHomePage'\n\n\nconst Main = () => {\n  return (\n    <main >\n     {/* <CBTHomePage /> */}\n    </main >\n  )\n}\n\nexport default Main\n","import React, { useContext } from 'react'\nimport Modal from 'styled-react-modal'\n//import styled from 'styled-components'\nimport { ThoughtRecordContext } from '../../contexts/ThoughtRecordContext'\nimport NavigationButton from './recordCreation/NavigationButton'\n\nconst StyledModal = Modal.styled`\n  min-width: 90%;\n  max-width: 900px;\n  height: 85vh;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  background-color: white;\n  transition: all 0.3s ease-in-out;\n  border-radius: 10px;\n  box-shadow: 3px 3px 10px rgba(0,0,0,0.5);\n  z-index: 1100;\n`\n\nconst PreviewBlock = props =>{\n  return(\n    <div >\n      <div >{props.title}</div>\n      <div >{props.content}</div>\n    </div >\n  )\n}\n\n/**\n * \n * @param {Object} props\n * @param {Boolean} props.isOpen - Show model if true\n * @param {Function}  props.callback - The callback the handles Modal closing\n * @returns \n */\nconst ThoughtSubmission = (props) => {\n  const {\n          situation,\n          emotion,\n          automaticThought,\n          alternateThought\n        } = useContext(ThoughtRecordContext)\n\n\n  const processThoughts = () =>{}\n\n  const directionProps = {\n    leftButton: { callback: ()=> props.callback(), title: 'Close Modal' },\n    rightButton: { callback: ()=>processThoughts(), title: 'Submit Record' }\n  }\n\n  return (\n    <StyledModal isOpen={props.isOpen} onBackgroundClick={props.callback} onEscapeKeydown={props.callback} >\n      <PreviewBlock {...{title: 'Situation', content: situation}} />\n      <PreviewBlock {...{title: 'Emotion', content: emotion}} />\n      <PreviewBlock {...{title: 'Automatic Thought', content: automaticThought}} /> \n      <div >\n        <div >{'Alternate Thought'}</div>\n        <ul >\n          {\n            alternateThought.map(item=>{\n              return <li key={item.id} >{item.thought}</li>\n            })\n          }\n        </ul>\n      </div>\n      <NavigationButton {...directionProps} />\n    </StyledModal >\n  )\n}\n\nexport default ThoughtSubmission\n","export default __webpack_public_path__ + \"static/media/sad-emoji.9705fe53.png\";","export default __webpack_public_path__ + \"static/media/afraid-emoji.13caa18b.png\";","export default __webpack_public_path__ + \"static/media/angry-emoji.590e16a6.png\";","export default __webpack_public_path__ + \"static/media/disgust-emoji.920f8667.png\";","export default __webpack_public_path__ + \"static/media/happy-emoji.8d0bd99c.png\";","export default __webpack_public_path__ + \"static/media/surprise-emoji.575c8410.png\";","import React from 'react'\n\nconst Menu = (props) => {\n  const layout = (props.menu === 'dropdown')? {ul: 'vertical-menu'} : {ul: 'horizontal-menu'} \n  return (\n    <ul className={ layout.ul} >\n      <li >{'Home'}</li>\n      <li >{'Thoughts'}</li>\n    </ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { List, Safe } from 'react-bootstrap-icons'\nimport Menu from './Menu'\n\nconst Navbar = () => {\n  return (\n    <header >\n      <nav >\n        {/* Company name and logo */}\n        <div className={'company'}>\n          <Safe className={'logo'} aria-label={'colored security safe'} />\n          <span >{'Life Logs'}</span>\n        </div>\n        {/* Navigation */}\n        <div className={'menu'} >\n          <span className={'menu-burger'} tabIndex={'0'}  >\n            <List className={'menu-icon'} aria-label={'white hamburger dropdown menu'} />\n          </span >\n          <Menu menu={'dropdown'} />\n          <Menu menu={'inline'} />\n        </div >        \n      </nav>\n    </header>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport Main from './Main';\nimport Navbar from './Navbar';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\n\nimport './scss/index.scss'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport {ModalProvider} from 'styled-react-modal'\n\n/** Background element for the modal */\nconst ModalBackground = styled.div` \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1000;\n  opacity: 1.0;\n  background-color: #2196f3;\n`\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider backgroundComponent={ModalBackground} >\n      <App />\n    </ModalProvider >\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}